name: CI/CD Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [OrderService, ProductService, UserService]
    services:
      mysql-order:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: orderpass
          MYSQL_DATABASE: orderdb
          MYSQL_USER: orderuser
          MYSQL_PASSWORD: orderpass
        ports:
          - 3309:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mysql-product:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: productpass
          MYSQL_DATABASE: productdb
        ports:
          - 3308:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mysql-user:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: userdb
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and test ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: mvn clean install -Dspring.profiles.active=ci

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/orderservice:latest OrderService
          docker build -t ${{ secrets.DOCKER_USERNAME }}/productservice:latest ProductService
          docker build -t ${{ secrets.DOCKER_USERNAME }}/userservice:latest UserService

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/orderservice:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/productservice:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/userservice:latest
